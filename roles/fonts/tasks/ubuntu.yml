---
- name: "Fonts | Update APT cache"
  ansible.builtin.apt:
    update_cache: true
  become: true
  changed_when: false

- name: "Fonts | Install fontconfig and emoji support"
  ansible.builtin.apt:
    name:
      - fontconfig
      - fonts-noto-color-emoji
    state: present
  become: true

- name: "Fonts | Ensure fonts directory"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.local/share/fonts"
    state: directory
    mode: "0755"
  become: true

- name: "Fonts | Check if nerd-fonts are installed"
  ansible.builtin.shell: "set -o pipefail && fc-list | grep -i 'MesloLGS NF'"
  register: nerd_fonts_installed
  changed_when: false

- name: "Fonts | Install nerd-fonts"
  when: nerd_fonts_installed.rc != 0
  become: true
  block:
    - name: "Fonts | Download nerd-fonts"
      ansible.builtin.get_url:
        url: https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip
        dest: "{{ ansible_user_dir }}/Meslo.zip"
        mode: "0644"
      notify:
        - "Fonts | Cleanup downloaded zip file"

    - name: "Fonts | Unzip nerd-fonts"
      ansible.builtin.unarchive:
        src: "{{ ansible_user_dir }}/Meslo.zip"
        dest: "{{ ansible_user_dir }}/.local/share/fonts"
        remote_src: true


- name: "Fonts | Ensure config directories exist"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ ansible_user_dir }}/.config/fontconfig"
    - "{{ ansible_user_dir }}/.config/fontconfig/conf.d"

- name: "Fonts | Create symlink to fontconfig config"
  ansible.builtin.file:
    src: "{{ role_path }}/files/fonts.conf"
    dest: "{{ ansible_user_dir }}/.config/fontconfig/fonts.conf"
    state: link
    force: true
  become: true

- name: "Fonts | Create symlink to emoji fontconfig config"
  ansible.builtin.file:
    src: "{{ role_path }}/files/01-emoji.conf"
    dest: "{{ ansible_user_dir }}/.config/fontconfig/conf.d/01-emoji.conf"
    state: link
    force: true
  become: true

- name: "Fonts | Update font cache"
  ansible.builtin.command: "fc-cache -fv"
  changed_when: false
